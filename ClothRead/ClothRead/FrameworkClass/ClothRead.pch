//
//  ClothRead.pch
//  ClothRead
//
//  Created by Kathleen on 2020/1/25.
//  Copyright © 2020 strong. All rights reserved.
//

#ifndef ClothRead_pch
#define ClothRead_pch

#pragma mark -- 自定义公共类
#import "MUEncryption.h"
#import "CRTextFieldView.h"

#pragma mark -- 第三方框架
#import <AFNetworking.h>
#import <Masonry.h>
#import <MJExtension.h>
#import <MBProgressHUD/MBProgressHUD.h>

#pragma mark - Categorys
#import "UIView+CodeView.h"
#import "NSArray+Categorys.h"
#import "NSDictionary+Categorys.h"
#import "NSException+Categorys.h"
#import "NSObject+Categorys.h"
#import "NSString+Categorys.h"
#import "NSTimer+Categorys.h"
#import "UIColor+Categorys.h"
#import "UIView+Categorys.h"
#import "NSNumber+Category.h"

#pragma mark - Tools
#import "CRTabbarTool.h"
#import "MUViewTool.h"
#import "MUObjectTool.h"
#import "MUCheckoutTool.h"
#import "iToast.h"
#import "SUIUtils.h"
#import "MUAESTool.h"
#import "MULoadingTool.h"
#import "UIImage+Categorys.h"
#import "LoadingView.h"
#import "MUKitTool.h"
#import "MUStateView.h"
#import "MUBtnNoHlight.h"
#import "MUPaddingLabel.h"
#import "LoadingView.h"
#import "MULabel.h"

/*****************************Tool**********************************/
#pragma mark 宏定义

#pragma mark -- 实用小工具
#define kUserDef [NSUserDefaults standardUserDefaults]
#define kNotification [NSNotificationCenter defaultCenter]
#define kFileManager  [NSFileManager defaultManager]
#define STRING(str) [NSString stringWithFormat:@"%@",str]

#pragma mark -- 适配
// 判断是否是iPhone8X以后的机型
#define ankedIPhone8 [UIApplication sharedApplication].delegate.window.safeAreaInsets.top

#pragma mark -- 添加NavigationController
#define DEFINE_CONTROLLER(CName, navInstance) \
BaseNavigationController *navInstance = nil; \
do { \
CName *temName = [[CName alloc] init];\
navInstance = [[BaseNavigationController alloc] initWithRootViewController:temName];\
}while (0)

#define AES128Key @"MIGfMA0GCSqGSIb3"

#define Docsdir [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0]


//判断iPhone4系列
#define kiPhone4 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 960), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
//判断iPhone5系列
#define kiPhone5 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
//判断iPhone6系列
#define kiPhone6 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(750, 1334), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
//判断iphone6+系列
#define kiPhone6Plus ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2208), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
//判断iPhoneX
#define IS_IPHONE_X ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
//判断iPHoneXr
#define IS_IPHONE_Xr ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
//判断iPhoneXs
#define IS_IPHONE_Xs ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
//判断iPhoneXs Max
#define IS_IPHONE_Xs_Max ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size) && !isPad : NO)
  
#define IS_IPHONE_X_orMore (IS_IPHONE_X==YES || IS_IPHONE_Xr== YES || IS_IPHONE_Xs== YES || IS_IPHONE_Xs_Max== YES)

#pragma mark -- 色值
// 基础色值
#define MUBaseColor [UIColor colorWithHexString:@"508BFF"]
// 自定义色值
#define MUSColor(r, g, b, a)           [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:a]
// 十六进制色值转换
#define MUSColorFormRGBA(r , g , b ,a) [UIColor colorWithRed:((CGFloat)((r & 0xFF0000) >> 16)) / 255.0 green:((CGFloat)((g & 0xFF00) >> 8)) / 255.0 blue:((CGFloat)(b & 0xFF)) / 255.0 alpha:a]
// 随机色值
#define MUArc4Random [UIColor colorWithHue:(arc4random() % 256 / 256.0 ) saturation:( arc4random() % 128 / 256.0 ) + 0.5 brightness:( arc4random() % 128 / 256.0 ) + 0.5 alpha:1]

#pragma mark -- 视图全屏宽高
#define SCREENW [UIScreen mainScreen].bounds.size.width
#define SCREENH [UIScreen mainScreen].bounds.size.height
#define SCREEN_Proportion [UIScreen mainScreen].bounds.size.width/375.000000f
/** 屏幕高度比例 */
#define scale_height (SCREENH *1.0/667)
/** 屏幕宽度比例 */
#define scale_width  (SCREENW *1.0/375)

#pragma mark -- 坐标宏定义

#define kGetX(var)                  CGRectGetMinX(var.frame)
#define kGetY(var)                  CGRectGetMinY(var.frame)
#define kGetWidth(var)              CGRectGetWidth(var.frame)
#define kGetHeight(var)             CGRectGetHeight(var.frame)
#define kGetCenterX(var)            CGRectGetMidX(var.frame)
#define kGetCenterY(var)            CGRectGetMidY(var.frame)
#define kGetMaxX(var)               CGRectGetMaxX(var.frame)
#define kGetMaxY(var)               CGRectGetMaxY(var.frame)

#pragma mark -- 打印输出（中文转码）
#ifdef DEBUG
#define MCLog(...) NSLog(__VA_ARGS__)
#else
#define NSLog(...)
#endif

#endif /* ClothRead_pch */
